import { tryThat } from '@logto/shared';
import { assertEnv, getEnv, getEnvAsStringArray, yes } from '@silverhand/essentials';

import UrlSet from './UrlSet.js';
import { throwErrorWithDsnMessage } from './throw-errors.js';

export default class GlobalValues {
  public readonly isProduction = getEnv('NODE_ENV') === 'production';
  public readonly isTest = getEnv('NODE_ENV') === 'test';
  public readonly isIntegrationTest = yes(getEnv('INTEGRATION_TEST'));
  public readonly isCloud = yes(process.env.IS_CLOUD);

  public readonly httpsCert = process.env.HTTPS_CERT_PATH;
  public readonly httpsKey = process.env.HTTPS_KEY_PATH;
  public readonly isHttpsEnabled = Boolean(this.httpsCert && this.httpsKey);

  /**
   * The UrlSet with no prefix for Logto core service. It serves requests to the OIDC Provider and Management APIs
   * from all tenants.
   *
   * Especially, a glob (`*`) is allowed for the hostname of its property `endpoint` to indicate if the domain-based multi-tenancy (DBMT)
   * is enabled which affects some critical behaviors of Logto.
   *
   * **When DBMT is enabled**
   *
   * - For non-admin tenants, tenant endpoint will be generated by replacing the glob in the `urlSet.endpoint`.
   * - For admin tenant, if `adminUrlSet` has no endpoint available, tenant endpoint will be generated by replacing the glob in the `urlSet.endpoint`.
   * - Admin Console will NOT be served under admin tenant since the cloud service will do.
   * - Incoming requests will use glob matching to parse the tenant ID from the request URL.
   *
   * **When DBMT is disabled**
   *
   * - For non-admin tenants, tenant endpoint will always be `urlSet.endpoint`.
   * - For admin tenant, tenant endpoint will always be `adminUrlSet.endpoint`.
   * - Admin Console will be served under admin tenant.
   * - Incoming requests will check whether the URL matches adminUrlSet.endpoint, which indicates the admin tenant ID. If there is no match, the default tenant ID will be used.
   */
  public readonly urlSet = new UrlSet(this.isHttpsEnabled, 3001);
  /**
   * The UrlSet with prefix `ADMIN_` for Logto admin tenant. To completely disable it, set `ADMIN_DISABLE_LOCALHOST` to a truthy value and leave `ADMIN_ENDPOINT` unset.
   *
   * Should be disabled on the cloud.
   *
   * @see urlSet For mutual effects between these two sets.
   */
  public readonly adminUrlSet = new UrlSet(this.isHttpsEnabled, 3002, 'ADMIN_');
  /**
   * The UrlSet with prefix `CLOUD_` for Logto cloud service. It affects Admin Console Redirect URIs and some CORS configuration.
   */
  public readonly cloudUrlSet = new UrlSet(this.isHttpsEnabled, 3003, 'CLOUD_');

  /** @see urlSet For detailed explanation. */
  public readonly isDomainBasedMultiTenancy = this.urlSet.endpoint.hostname.includes('*');

  // eslint-disable-next-line unicorn/consistent-function-scoping
  public readonly databaseUrl = tryThat(() => assertEnv('DB_URL'), throwErrorWithDsnMessage);
  public readonly developmentTenantId = getEnv('DEVELOPMENT_TENANT_ID');
  public readonly userDefaultRoleNames = getEnvAsStringArray('USER_DEFAULT_ROLE_NAMES');
  public readonly developmentUserId = getEnv('DEVELOPMENT_USER_ID');
  public readonly trustProxyHeader = yes(getEnv('TRUST_PROXY_HEADER'));
  public readonly ignoreConnectorVersionCheck = yes(getEnv('IGNORE_CONNECTOR_VERSION_CHECK'));
  public readonly ignoreConnectorFormViewConfigGuardCheck = yes(
    getEnv('IGNORE_CONNECTOR_FORM_VIEW_CONFIG_GUARD_CHECK')
  );

  public readonly showConnectorLoadingErrorDetails = yes(
    getEnv('SHOW_CONNECTOR_LOADING_ERROR_DETAILS')
  );

  public get dbUrl(): string {
    return this.databaseUrl;
  }

  public get endpoint(): URL {
    return this.urlSet.endpoint;
  }
}
